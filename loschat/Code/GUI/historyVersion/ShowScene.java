import javafx.beans.property.BooleanProperty;import javafx.beans.property.SimpleBooleanProperty;import javafx.geometry.*;import javafx.scene.Scene;import javafx.scene.control.*;import javafx.scene.layout.*;import javafx.scene.paint.Color;import javafx.scene.text.Font;import javafx.stage.Stage;import java.io.FileNotFoundException;/** * sign up * * @author Yan * @version 2020-3-14 */public class ShowScene {    static Stage window;    public ShowScene(Stage window) {        this.window = window;    }    /**     * sign up     */    public static void showScene(Scene origin, Scene newScene) {        //show main page (chat)        ShowMain showMain = new ShowMain(window);        //close & exit        CloseProgram close = new CloseProgram(window);        Exit exitProgram = new Exit(window);//        Main user = new Main(textField, passwordField);        String styles1 =//login button                "-fx-background-color: #000000;" +                        "-fx-border-color: #000000;";        String styles2 =                "-fx-border-width: 0 1 1 1, 1 0 0 0;\n" +                        "-fx-border-radius: 5, 5;\n" +                        "-fx-border-color: #0000ff, #0000ff;\n" +                        "-fx-background-color: #ffffff;";        String alert =                "-fx-border-color: #FA6565;\n" +                        "-fx-background-color: #ffffff;";        String styles4 =                "-fx-border-color: #D0D0D0;\n" +                        "-fx-background-color: #ffffff;";//----------------------        //sign up part        //add items        //name input        Label nameLabel = new Label("Username");        TextField nameInput = new TextField();        nameInput.setMaxWidth(200);        nameInput.setStyle(styles4);        nameInput.setPromptText("At most 20 characters");        VBox name = new VBox(3);        name.setMaxWidth(200);//        name.setStyle("-fx-background-color: #ffffff;");//        name.setAlignment(Pos.CENTER);        name.getChildren().addAll(nameLabel, nameInput);        //password input        Label passLabel = new Label("Create a password");        PasswordField passInput = new PasswordField();        passInput.setMaxWidth(200);        passInput.setStyle(styles4);        passInput.setPromptText("Numbers or letters"); //hint        VBox pass = new VBox(3);        pass.setMaxWidth(200);//        pass.setStyle("-fx-background-color: #ffffff;");//        pass.setAlignment(Pos.CENTER);        pass.getChildren().addAll(passLabel, passInput);//-------------------------------------        Button sign = new Button("Join");        sign.setPrefWidth(200);        sign.setStyle(styles1);        sign.setFont(Font.font("Arial", 14));        sign.setTextFill(Color.WHITE);//-------------------------------------        Label hint = new Label("Already have an account?");        hint.setFont(Font.font("Arial", 10));        Label login = new Label("Log in");        HBox log = new HBox(5);        log.setMaxWidth(200);//        log.setStyle("-fx-background-color: #ffffff;");        log.setAlignment(Pos.CENTER);        login.setFont(Font.font("Arial", 10));        login.setTextFill(Color.rgb(245,166,35));        login.hoverProperty().addListener((v, oldValue, newValue) -> {            if(newValue)                login.setUnderline(true);            else if(oldValue)                login.setUnderline(false);        });        log.setAlignment(Pos.CENTER_LEFT);        log.getChildren().addAll(hint, login);//-------------------------------------        /**         * get user input & judge valid input         * //username is required         * //Your password should be at least 6 characters long.         * // reset your password         * // Either your email or password was incorrect. Please try again or click the "Forgot password?" link below.         */        sign.setOnAction(e -> {            if(!IsValidInput.isValidAccount(nameInput)){                nameInput.setPromptText("Username is invalid!");                nameInput.setStyle(alert);            }            else if(!IsValidInput.isValidPass(passInput)){                passInput.setPromptText("Reset your password");                passInput.setStyle(alert);            }            else if(IsValidInput.isValidAccount(nameInput) && IsValidInput.isValidPass(passInput)){                /**                 * switch to mainPage                 */                try {                    ShowMain.showMain(origin); //original scene                } catch (FileNotFoundException ex) {                    ex.printStackTrace();                }            }        });//-------------------------------------        nameInput.focusedProperty().addListener((e, old, newV) ->{            if(newV)                nameInput.setStyle(styles4);        });        passInput.focusedProperty().addListener((e, old, newV) ->{            if(newV)                passInput.setStyle(styles4);        });//------sign up page ------------------        /**         * switch to sign up page         */        login.setOnMouseClicked(e -> window.setScene(origin));//------close program----------------------------------------------        /**         * close the program         * if scene = login -> close         * else -> sure exit? -> yes -> close         */        window.setOnCloseRequest(e -> window.close());//------add elements-------------------------------------------------        VBox vBox = new VBox(20);        vBox.getChildren().addAll(                name, pass, sign, log        );//        vBox.setStyle("-fx-background-color: #f00000;");        vBox.setAlignment(Pos.CENTER);//------remove default focus--------------------------------------------        final BooleanProperty firstTime = new SimpleBooleanProperty(true); // Variable to store the focus on stage load        nameInput.focusedProperty().addListener((observable,  oldValue,  newValue) -> {            if(newValue && firstTime.get()){                vBox.requestFocus(); // Delegate the focus to container                firstTime.setValue(false); // Variable value changed for future references            }        });////useless////example listen for selection changes(choiceBox)//// -----------------------------------------------------------------//        ChoiceBox<String> choiceBox = new ChoiceBox<>();//        //get items//        choiceBox.getItems().add("see all users");//        choiceBox.getItems().add("create group chat");//        choiceBox.getItems().add("exit");////        //listen for selection changes//        choiceBox.getSelectionModel().selectedItemProperty().addListener( (v, oldValue, newValue) ->//                System.out.println(newValue));//// -----------------------------------------------------------------//////example listen for selection changes(comboBox)//// -----------------------------------------------------------------//        ComboBox<String> comboBox = new ComboBox<>();//        //get items//        comboBox.getItems().addAll(//                "see all users",//                "create group chat",//                "exit"//                );////        comboBox.setPromptText("...");////        comboBox.setEditable(true); //can make it editable////        //get choice//        comboBox.setOnAction(e -> System.out.println("user choose to " + comboBox.getValue()));//// -----------------------------------------------------------------        newScene = new Scene(vBox, 600, 400);        window.setScene(newScene);    }}